/*TO-DO:
Розробити метод, який знаходить таксі з найменшим прибутком.

1.  Створити масив екземплярів батьківського класу та виконати розрахункові дії з використанням методів класу
    Дослідити відношення спадкування, агрегування та залежності класів:
    розробка екземплярів класу-агрегата з різними параметрами,
    виклик методів для екземплярів класу, що агрегуються,
    розробка класів-нащадків,
    виклик перевизначених методів для екземплярів класів-нащадків і т.д.
    Запропонувати свої класи, які розширюють та доповнюють функціональні можливості Вашого пакету класів, та розробити їх

2.	Запропонувати в одному з класів використання вкладеного класу та локального класу.
    Дослідити доступ до елементів вкладеного класу з його зовнішнього класу та з інших класів.
    Дослідити доступ до елементів локального класу з зовнішнього класу

3.	Опрацювати створення масивів екземплярів об’єктів мовою Java та основні прийоми обробки масивів:
    відшукання заданого елемента,
    відшукання найбільшого (найменшого) значення,
    сортування масиву,
    копіювання масиву (20 балів).
* */

/*Taxi Park Functions
* Brief Report:
* * profit
* * number of cars
* * list of cars (number, type, profit)
*/

package Lab1;

import java.util.ArrayList;

public class TaxiPark {
    private int numberOfCars;
    private double totalProfit;
    private ArrayList<Taxi> cars;


    public double getTotalProfit() {
        return totalProfit;
    }

    public ArrayList<Taxi> getCars() {
        return cars;
    }

    public void getCarInfo() {

    }

    public void getParkReportBrief() {}


    public int minProfitTaxi() {
        int index;
        return 0;
    }

    public int maxProfitTaxi() {
        return 0;
    }



}
